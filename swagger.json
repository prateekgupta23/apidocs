{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "NUMADIC ICICI FASTAG API DOCUMENTATION",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://api.numadic.com/"
    }
  },
  "host": "api.numadic.com",
  "basePath": "/v2",
  "tags": [
    {
      "name": "user",
      "description": "APIs"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/client/v1/icici/fastag/transfer-balance": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "This API method is used to recharge the vehicle(s) by Customer using the CUG Wallet Balance. If Customer requested Recharge for one or more vehicle, Recharge will be initiated if the Total Recharge amount of all the requested vehicles is less than or equal to the available CUG Wallet Balance amount of the Customer, then the recharge request of each vehicle will be sent to processing queue for CUG Wallet Balance transfer. If the Total Recharge amount is greater than the available CUG Wallet balance amount, the recharge request is completely rejected. Customer has to send a new request with a modified recharge limit.",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "CustomerID",
            "in": "query",
            "description": "Customer ID of the Corporate Customer",
            "required": true,
            "type": "integer"
          },
          {
            "name": "RechargeDetails",
            "in": "query",
            "description": "Collection of Vehicle numbers Can be requested up to a maximum of 10. If invalid or unknown vehicle numbers are provided in the request, it will not recharge for the entire request. For Recharge Customer ID, Vehicle number(s), Amount(s) are mandatory.",
            "required": true,
            "type": "string"
          },
          {
            "name": "RechargeDetailsVehicleNumber",
            "in": "query",
            "description": "Vehicle number for the recharge to be initiated.",
            "required": true,
            "type": "string"
          },
          {
            "name": "RechargeDetailsRechargeAmount",
            "in": "query",
            "description": "Amount to be recharged for the vehicle.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            },
            "headers": {
              "CustomerID": {
                "type": "integer",
                "format": "int32",
                "description": "Customer ID of corporate customer"
              },
              "RechargeDetails": {
                "type": "string",
                "format": "str",
                "description": "Contains Collection of Vehicle Recharge details that need to be returned for the requested recharges."
              },
              "VehicleRechargeDetailsReason": {
                "type": "string",
                "format": "str",
                "description": "Reason in case if the recharge request is rejected.Empty if request is successfully accepted for processing."
              },
              "VehicleRechargeDetailsRechargeStatus": {
                "type": "string",
                "format": "str",
                "description": "Returns Recharge status message."
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/client/v1/icici/fastag/transaction/toll": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "This API method returns the transaction details of the requested vehicle number of a Customer for the given duration. This API request accepts only a single vehicle number to return the Transaction details.",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Customer ID",
            "in": "query",
            "description": "Customer ID of the Corporate Customer",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Vehicle Number",
            "in": "query",
            "description": "Specifies Vehicle number",
            "required": true,
            "type": "string"
          },
          {
            "name": "StartTransactionDate",
            "in": "query",
            "description": "Start date of the duration for requesting the transactions dated number - Mandatory and should be send in ISO8601 format. Transaction details can be retrieved for a maximum of past 40 days. Start Transaction Date should be less than or equal to that of today’s date.",
            "required": true,
            "type": "string"
          },
          {
            "name": "EndTransactionDate",
            "in": "query",
            "description": "End date of the duration for requesting the transaction dated to, Date should be send in ISO8601format. End date should not be future date.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            },
            "headers": {
              "Customer ID": {
                "type": "integer",
                "format": "int32",
                "description": "Customer ID of corporate customer"
              },
              "TransactionDetails": {
                "type": "string",
                "format": "str",
                "description": "Contains collection of Transaction details that needs to be returned for the requested vehicle number and duration in the request."
              },
              "TransactionDetails TransactionId": {
                "type": "integer",
                "format": "int32",
                "description": "Transaction ID of the transaction."
              },
              "TransactionDetails PlazaName": {
                "type": "string",
                "format": "str",
                "description": "Plaza name of the transaction."
              },
              "TransactionDetails TransactionAmount": {
                "type": "integer",
                "format": "int32",
                "description": "Transaction Amount."
              },
              "TransactionDetails TransactionDateTime": {
                "type": "string",
                "format": "str",
                "description": "Date time of transaction. Returns in ISO 8601 date format"
              },
              "TransactionDetails ProcessingDateTime": {
                "type": "string",
                "format": "str",
                "description": "Processed date time of the transaction. Returns in ISO 8601 date format"
              },
              "TransactionDetails TransactionReferenceNumber": {
                "type": "integer",
                "format": "int32",
                "description": "Reference number of the transaction."
              },
              "TransactionDetails TransactionStatus": {
                "type": "string",
                "format": "str",
                "description": "Status of the Transaction."
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/client/v1/icici/fastag/transaction/credit": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "This API method returns the Credit transactions/Recharge details for the requested Customer ID and Vehicle number in a given duration.The details can be requested only for a single vehicle number.",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "VehicleNumber",
            "in": "query",
            "description": "Vehicle number. If invalid or unknown vehicle number is provided in the request, it will not return any response. To get recharge balance details both Customer ID and Vehicle number are mandatory.",
            "required": true,
            "type": "string"
          },
          {
            "name": "FromDate",
            "in": "query",
            "description": "Starting date of the duration to get the recharge orcedit transaction details-Credit transaction start date. Date format should be in ISO8601 format. Transaction details can be retrieved for a maximum of past 40 days. Date should be less than or equal to that of today’s date.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "description": "End date of the duration to get the recharge details-transaction date. Date format should be in ISO8601 format. Should not be greater than today’s date.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            },
            "headers": {
              "CustomerID": {
                "type": "integer",
                "format": "int32",
                "description": "Customer ID"
              },
              "CreditTransactionDetails": {
                "type": "string",
                "format": "str",
                "description": "Contains Collection of credit transaction details that need to be returned for the requested vehicle numbers in the request."
              },
              "CreditTransactionDetails - VehicleNumber": {
                "type": "string",
                "format": "str",
                "description": "Vehicle number"
              },
              "CreditTransactionDetails - Amount": {
                "type": "integer",
                "format": "int32",
                "description": "Returns Recharge status message."
              },
              "CreditTransactionDetails - DateOfTransaction": {
                "type": "string",
                "format": "str",
                "description": "Date of credit transaction. Returns in ISO 8601 date format"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "petId": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "shipDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Order Status",
          "enum": [
            "placed",
            "approved",
            "delivered"
          ]
        },
        "complete": {
          "type": "boolean",
          "default": false
        }
      },
      "xml": {
        "name": "Order"
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "userStatus": {
          "type": "integer",
          "format": "int32",
          "description": "User Status"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "Pet": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "name": {
          "type": "string",
          "example": "doggie"
        },
        "photoUrls": {
          "type": "array",
          "xml": {
            "name": "photoUrl",
            "wrapped": true
          },
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "xml": {
            "name": "tag",
            "wrapped": true
          },
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "status": {
          "type": "string",
          "description": "pet status in the store",
          "enum": [
            "available",
            "pending",
            "sold"
          ]
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}
